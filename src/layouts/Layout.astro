---
import '@/styles/globals.css';
import NavBar from '@/components/NavBar';
import { ViewTransitions } from 'astro:transitions';
import Footer from '@/components/Footer';
interface Props {
    title: string;
}

const { title } = Astro.props;
---

<script is:inline>
    const getThemePreference = () => {
        if (
            typeof localStorage !== 'undefined' &&
            localStorage.getItem('theme')
        ) {
            return localStorage.getItem('theme');
        }
        return window.matchMedia('(prefers-color-scheme: dark)').matches
            ? 'dark'
            : 'light';
    };
    const isDark = getThemePreference() === 'dark';
    document.documentElement.classList[isDark ? 'add' : 'remove']('dark');

    if (typeof localStorage !== 'undefined') {
        const observer = new MutationObserver(() => {
            const isDark = document.documentElement.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
        });
        observer.observe(document.documentElement, {
            attributes: true,
            attributeFilter: ['class'],
        });
    }
</script>

<html lang="es" class="dark">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Astro description" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <ViewTransitions fallback="none" />

        <style is:global>
            html,
            body {
                font-family: 'CircularStd', system-ui, sans-serif;
                background: #010101;
                color: white;
                margin: 0;
                padding: 0;
                overflow-x: hidden; /* Prevent horizontal overflow */
                scroll-behavior: smooth;
            }

            body {
                min-height: 100dvh; /* Full screen height */
                display: flex;
                flex-direction: column;
            }

            #app {
                flex: 1;
                display: flex;
                flex-direction: column;
            }

            main {
                width: 100%; /* Ensure it doesn't overflow */
                max-width: 100vw; /* Prevent horizontal overflow */
                box-sizing: border-box; /* Include padding and border in the element's total width and height */
            }

            ::-webkit-scrollbar {
                width: 5px;
                height: 5px;
                position: fixed;
            }

            /* Track */
            ::-webkit-scrollbar-track {
                border-radius: 20px;
            }

            /* Handle */
            ::-webkit-scrollbar-thumb {
                background: rgb(24 24 27);
                border-radius: 20px;
            }

            .player-wrapper {
                position: relative;
                padding-top: 56.25%; /* Player ratio: 100 / (1280 / 720) */
            }

            .react-player {
                position: absolute;
                top: 0;
                left: 0;
            }

            @font-face {
                font-family: 'CircularStd';
                src: url('/fonts/CircularStd-Medium.woff2') format('woff2');
                font-weight: 500;
                font-style: normal;
                font-display: swap;
            }

            @font-face {
                font-family: 'CircularStd';
                src: url('/fonts/CircularStd-Book.woff2') format('woff2');
                font-weight: 400;
                font-style: normal;
                font-display: swap;
            }

            @font-face {
                font-family: 'CircularStd';
                src: url('/fonts/CircularStd-Light.woff2') format('woff2');
                font-weight: 300;
                font-style: normal;
                font-display: swap;
            }

            @font-face {
                font-family: 'CircularStd';
                src: url('/fonts/CircularStd-Bold.woff2') format('woff2');
                font-weight: 700;
                font-style: normal;
                font-display: swap;
            }

            @font-face {
                font-family: 'CircularStd';
                src: url('/fonts/CircularStd-Black.woff2') format('woff2');
                font-weight: 900;
                font-style: normal;
                font-display: swap;
            }
        </style>
    </head>
    <body
        class="dark:bg-zinc-800 bg-zinc-800/80 h-full w-full relative dark:text-white text-primary">
        <!-- NavBar with fixed position -->
        <header
            class="fixed top-0 left-0 w-full z-50"
            transition:persist="navbar"
            transition:name="navbar">
            <NavBar client:load />
        </header>
        <!-- Main content with adjusted top margin -->
        <!-- Adjust the mt-[value] based on the actual height of your NavBar -->
        <main class="">
            <slot />
        </main>
        <Footer client:load />
    </body>
</html>
